matrix:
  include:
    - dist: trusty
      sudo: required
      language: generic
      services:
        - docker
      env:
        global:
        - PACKAGE_NAME="coq-of-ocaml"
        matrix:
        - OCAML_VERSION="4.02"  COQ_VERSION="8.9.1"  SHOULD_SUPPORT="false"
        - OCAML_VERSION="4.03"  COQ_VERSION="8.9.1"  SHOULD_SUPPORT="false"
      install: |
        # Prepare the Docker container
        docker pull ocaml/opam2:${OCAML_VERSION}
        docker run -d -i --init --name=CONTAINER -v ${TRAVIS_BUILD_DIR}:/home/project -w /home/project ocaml/opam2:${OCAML_VERSION}
        docker exec CONTAINER /bin/bash --login -c "
          # This bash script is double-quoted to interpolate Travis CI env vars:
          echo \"Build triggered by ${TRAVIS_EVENT_TYPE}\"
          export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
          set -ex  # -e = exit on failure; -x = trace for debug
          opam update
          opam pin add coq ${COQ_VERSION} --no-action
          opam pin add ${PACKAGE_NAME}.opam . --kind=path --no-action
          opam config list
          opam repo list
          opam pin list
          opam list
          " install
      script:
      - echo -e "${ANSI_YELLOW}Building...${ANSI_RESET}" && echo -en 'travis_fold:start:script\\r'
      - |
        docker exec CONTAINER /bin/bash --login -c "
          export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
          set -ex
          whoami
          sudo chown -R opam:opam /home/project
          export OPAMWITHTEST=true
          # Check if the package is compatible with the current environment
          if [ "${SHOULD_SUPPORT}" = "true" ] || opam install ${PACKAGE_NAME} --show-action; then
            # First, install the dependencies
            sudo apt-get update
            opam depext ${PACKAGE_NAME} -y
            opam install ${PACKAGE_NAME} --deps-only -y
            opam list
            # Then, install the package itself in verbose mode
            opam install ${PACKAGE_NAME} -v
          fi;
          " script
      - docker stop CONTAINER  # optional
      - echo -en 'travis_fold:end:script\\r'

    - dist: trusty
      sudo: required
      language: generic
      services:
        - docker
      env:
        global:
        - PACKAGE_NAME="coq-of-ocaml"
        matrix:
        - OCAML_VERSION="4.08"  COQ_VERSION="8.9.1"  SHOULD_SUPPORT="false"
        - OCAML_VERSION="4.09"  COQ_VERSION="8.9.1"  SHOULD_SUPPORT="false"
      install: |
        # Prepare the Docker container
        docker pull ocaml/opam2:${OCAML_VERSION}
        docker run -d -i --init --name=CONTAINER -v ${TRAVIS_BUILD_DIR}:/home/project -w /home/project ocaml/opam2:${OCAML_VERSION}
        docker exec CONTAINER /bin/bash --login -c "
          # This bash script is double-quoted to interpolate Travis CI env vars:
          echo \"Build triggered by ${TRAVIS_EVENT_TYPE}\"
          export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
          set -ex  # -e = exit on failure; -x = trace for debug
          opam update
          opam pin add coq ${COQ_VERSION} --no-action
          opam pin add ${PACKAGE_NAME}.opam . --kind=path --no-action
          opam config list
          opam repo list
          opam pin list
          opam list
          " install
      script:
      - echo -e "${ANSI_YELLOW}Building...${ANSI_RESET}" && echo -en 'travis_fold:start:script\\r'
      - |
        docker exec CONTAINER /bin/bash --login -c "
          export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
          set -ex
          whoami
          sudo chown -R opam:opam /home/project
          export OPAMWITHTEST=true
          # Check if the package is compatible with the current environment
          if [ "${SHOULD_SUPPORT}" = "true" ] || opam install ${PACKAGE_NAME} --show-action; then
            # First, install the dependencies
            sudo apt-get update
            opam depext ${PACKAGE_NAME} -y
            opam install ${PACKAGE_NAME} --deps-only -y
            opam list
            # Then, install the package itself in verbose mode
            opam install ${PACKAGE_NAME} -v
          fi;
          " script
      - docker stop CONTAINER  # optional
      - echo -en 'travis_fold:end:script\\r'
